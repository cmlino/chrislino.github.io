{"version":3,"sources":["index.js"],"names":["Square","props","className","value","onClick","onMouseUp","onMouseDown","onMouseOver","Board","square_board","shift","j","row","i","push","state","squares","xStart","yStart","this","setState","queue","paths","Map","y","x","set","console","log","search","setInterval","o","length","slice","next","get","split","find_path","clearInterval","dist","resetState","isMouseDown","moveStart","clas","class","addWall","toggleMouseDown","toggleMouseUp","items","renderSquare","board_","entries","index","BFS","status","React","Component","Game","domContainer","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.84ae9821.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nfunction Square(props) {\n    return (\n      <button className={props.value + ' square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\n    );\n  }\n\nclass Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        var square_board = [[]];\n        square_board.shift();\n        for(var j = 0; j < 15; j++){  \n            var row = [];\n            for(var i = 0; i < 28; i++){\n                if(i === 22 && j === 7)\n                    row.push('green')\n                else \n                    row.push(null);\n            }\n            square_board.push(row);\n        }\n        var xStart = 5;\n        var yStart = 5;\n        square_board[xStart][yStart] = 'start';\n        this.state = {\n            squares: square_board,\n            xStart: xStart,\n            yStart: yStart\n        };\n    }\n    resetState(){\n        var squares = [[]];\n        for(var j = 0; j < 15; j++){  \n            var row = [];\n            for(var i = 0; i < 28; i++){\n                if(i === 22 && j === 6)\n                    row.push('green')\n                else \n                    row.push(null);\n            }\n            squares.push(row);\n        }\n        this.setState({squares: squares, xStart: 5, yStart: 5});\n    }\n\n    BFS(i,j) {\n        var queue = [[]];\n        queue.push([i,j]);\n        queue.shift();\n        var paths = new Map();\n        let y = queue[0][0];\n        let x = queue[0][1]\n        paths.set(y+','+x,[0,null]);\n        console.log(queue[0]);\n        var search = setInterval(() => {\n            var squares = [];\n            for (var o = 0; o < this.state.squares.length; o++)\n                squares = this.state.squares.slice();\n            try{\n                y = queue[0][0];\n                x = queue[0][1];\n                if(queue.length !== 0 && !(y === 7 && x === 22)) {\n                    if(squares[y][x] !== 'X') { \n                        let dist = paths.get(y+','+x)[0]+1;\n                        if(x < 27 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall') {\n                            queue.push([y,x+1]);\n                            paths.set(y+','+(x+1),[dist, y+','+x]);\n                        }\n                        \n                        if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall'){\n                            queue.push([y,x-1]);\n                            paths.set(y+','+(x-1),[dist, y+','+x]);\n                        }\n\n                        if(y < 14 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall'){\n                            queue.push([y+1,x]);\n                            paths.set((y+1)+','+x,[dist, y+','+x]);\n                        }\n\n                        if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall'){\n                            queue.push([y-1,x]);\n                            paths.set((y-1)+','+x,[dist, y+','+x]);\n                        }\n                        squares[y][x] = 'X';\n                        squares[i][j] = 'start';\n                        this.setState({squares: squares});\n                    }\n                    queue.shift();\n                } else {\n                    let next = paths.get(7+','+22)[1].split(',');\n                    y = next[0];\n                    x = next[1];\n                    squares[y][x] = 'visited';\n                    var find_path = setInterval(() => { \n                        if(next !== null && !(x == j && y == i)) {\n                        squares[y][x] = 'visited';\n                        next = paths.get(y+','+x)[1];\n                        if(next!=null){\n                            next = next.split(',');\n                            y = next[0];\n                            x = next[1];\n                        }\n                        console.log(y+','+x);\n                        this.setState({squares: squares}); \n                        } else {\n                        clearInterval(find_path);\n                        }\n                    clearInterval(search);\n                    }, 10);\n                }\n            } catch {\n                clearInterval(find_path);\n                clearInterval(search);\n                this.resetState();\n            }\n        }, 5);\n    }\n    addWall(i,j){\n        console.log();\n        if(this.isMouseDown){\n            var squares = [];\n            for (var o = 0; o < this.state.squares.length; o++)\n                squares = this.state.squares.slice();\n            if(squares[i][j] == 'green' || squares[i][j] == 'start'){\n\n            } else {\n                squares[i][j] = 'wall';\n            }\n            this.setState({squares: squares});\n        }\n    }\n    toggleMouseDown(){\n        this.isMouseDown = true;\n    }\n    toggleMouseUp(){\n        this.isMouseDown = false;\n    }\n    moveStart(i,j){\n        var squares = [];\n        for (var o = 0; o < this.state.squares.length; o++)\n            squares = this.state.squares.slice();\n        var xStart = this.state.xStart;\n        var yStart = this.state.yStart;\n        squares[xStart][yStart] = null;\n        squares[i][j] = 'start';\n        xStart = i;\n        yStart = j;\n        this.setState({squares: squares, xStart: xStart, yStart: yStart})\n    }   \n    renderSquare(i,j) {\n        return (\n        <Square\n            value={this.state.squares[i][j]}\n            onClick={() => this.moveStart(i,j)}\n            clas={this.state.class}\n            onMouseOver={() => this.addWall(i,j)}\n            onMouseDown={() => this.toggleMouseDown()}\n            onMouseUp={() => this.toggleMouseUp()}\n            isMouseDown ={this.isMouseDown}\n        />\n        );\n    }\n\n    render() {\n        let status;\n        \n        const items = [[]];\n        for(var x = 0; x < 15; x++) {\n            var row = [];\n            for(var j = 0; j < 28; j++){\n                row.push(this.renderSquare(x,j));\n                if(j===8)\n                    items.push(row);\n            }\n            \n        }\n        const board_ = [];\n        for (const [index] of items.entries()) {\n            board_.push(<div className=\"board-row\">{items[index]}</div>);\n        }\n        return (\n        <div>\n        <nav className=\"navbar navbar-dark dark\">\n            <button className=\"navbar-toggler center reset\"onClick={() => this.BFS(this.state.xStart,this.state.yStart)}> Start!</button>\n            <button className=\"navbar-toggler center reset\"onClick={() => this.resetState()}> Reset Board</button>\n        </nav>\n             \n        <div className=\"status\">{status}</div>\n            {board_}\n        </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\nrender() {\n    return (\n    <div className=\"game\">\n        <div className=\"game-board\">\n        <Board />\n        </div>\n        <div className=\"game-info\">\n        </div>\n    </div>\n    );\n}\n}\n\n// ========================================\nconst domContainer = document.querySelector('#root');\nReactDOM.render(<Game />,domContainer);\n"],"sourceRoot":""}